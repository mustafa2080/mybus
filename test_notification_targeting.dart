import 'package:flutter/material.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'lib/services/notification_service.dart';
import 'lib/services/enhanced_notification_service.dart';

/// ููู ุงุฎุชุจุงุฑ ูุชุฌุฑุจุฉ ุงุณุชูุฏุงู ุงูุฅุดุนุงุฑุงุช
/// ูููู ุงุณุชุฎุฏุงูู ููุชุฃูุฏ ูู ุฃู ุงูุฅุดุนุงุฑุงุช ุชุธูุฑ ูููุณุชุฎุฏู ุงููุณุชูุฏู ููุท

class NotificationTargetingTest {
  final NotificationService _notificationService = NotificationService();
  final EnhancedNotificationService _enhancedService = EnhancedNotificationService();

  /// ุงุฎุชุจุงุฑ ุฅุฑุณุงู ุฅุดุนุงุฑ ููุณุชุฎุฏู ูุญุฏุฏ
  Future<void> testTargetedNotification() async {
    try {
      print('๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุงุณุชูุฏุงู ุงูุฅุดุนุงุฑุงุช...');

      // ุงูุญุตูู ุนูู ุงููุณุชุฎุฏู ุงูุญุงูู
      final currentUser = FirebaseAuth.instance.currentUser;
      if (currentUser == null) {
        print('โ ูุง ููุฌุฏ ูุณุชุฎุฏู ูุณุฌู ุฏุฎูู');
        return;
      }

      print('๐ค ุงููุณุชุฎุฏู ุงูุญุงูู: ${currentUser.uid}');

      // ุงุฎุชุจุงุฑ 1: ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุญุงูู (ูุฌุจ ุฃู ูุธูุฑ)
      print('\n๐ฑ ุงุฎุชุจุงุฑ 1: ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุญุงูู...');
      await _enhancedService.sendNotificationToUser(
        userId: currentUser.uid,
        title: 'ุงุฎุชุจุงุฑ ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุญุงูู',
        body: 'ูุฐุง ุงูุฅุดุนุงุฑ ูุฌุจ ุฃู ูุธูุฑ ูู',
        type: 'test',
        data: {
          'test_type': 'current_user',
          'timestamp': DateTime.now().toIso8601String(),
        },
      );
      print('โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ูููุณุชุฎุฏู ุงูุญุงูู');

      // ุงูุชุธุงุฑ ูููู
      await Future.delayed(Duration(seconds: 2));

      // ุงุฎุชุจุงุฑ 2: ุฅุฑุณุงู ุฅุดุนุงุฑ ููุณุชุฎุฏู ุขุฎุฑ (ูุฌุจ ุฃูุง ูุธูุฑ)
      print('\n๐ซ ุงุฎุชุจุงุฑ 2: ุฅุฑุณุงู ุฅุดุนุงุฑ ููุณุชุฎุฏู ุขุฎุฑ...');
      await _enhancedService.sendNotificationToUser(
        userId: 'fake_user_id_12345',
        title: 'ุงุฎุชุจุงุฑ ุฅุดุนุงุฑ ููุณุชุฎุฏู ุขุฎุฑ',
        body: 'ูุฐุง ุงูุฅุดุนุงุฑ ูุฌุจ ุฃูุง ูุธูุฑ ูู',
        type: 'test',
        data: {
          'test_type': 'other_user',
          'timestamp': DateTime.now().toIso8601String(),
        },
      );
      print('โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ููุณุชุฎุฏู ุขุฎุฑ (ูุฌุจ ุฃูุง ูุธูุฑ)');

      // ุงูุชุธุงุฑ ูููู
      await Future.delayed(Duration(seconds: 2));

      // ุงุฎุชุจุงุฑ 3: ุฅุฑุณุงู ุฅุดุนุงุฑ ุนุงู (ูุฌุจ ุฃู ูุธูุฑ)
      print('\n๐ข ุงุฎุชุจุงุฑ 3: ุฅุฑุณุงู ุฅุดุนุงุฑ ุนุงู...');
      await _notificationService.sendGeneralNotification(
        title: 'ุฅุดุนุงุฑ ุนุงู ููุงุฎุชุจุงุฑ',
        body: 'ูุฐุง ุฅุดุนุงุฑ ุนุงู ูุฌุจ ุฃู ูุธูุฑ',
        recipientId: currentUser.uid,
        data: {
          'test_type': 'general',
          'timestamp': DateTime.now().toIso8601String(),
        },
      );
      print('โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ุนุงู');

      print('\n๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ! ุชุญูู ูู ุงูุฅุดุนุงุฑุงุช ูู ุงูุชุทุจูู');

    } catch (e) {
      print('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: $e');
    }
  }

  /// ุงุฎุชุจุงุฑ ูุญุงูุงุฉ ุณููุงุฑูู ุงูุฅุฏูู ูููู ุงูุฃูุฑ
  Future<void> testAdminParentScenario() async {
    try {
      print('๐งช ุจุฏุก ุงุฎุชุจุงุฑ ุณููุงุฑูู ุงูุฅุฏูู ูููู ุงูุฃูุฑ...');

      final currentUser = FirebaseAuth.instance.currentUser;
      if (currentUser == null) {
        print('โ ูุง ููุฌุฏ ูุณุชุฎุฏู ูุณุฌู ุฏุฎูู');
        return;
      }

      // ูุญุงูุงุฉ: ุงูุฅุฏูู ูุนุฏู ุจูุงูุงุช ุทุงูุจ
      print('\n๐จโ๐ผ ูุญุงูุงุฉ: ุงูุฅุฏูู ูุนุฏู ุจูุงูุงุช ุทุงูุจ...');
      
      // ุฅุดุนุงุฑ ูููู ุงูุฃูุฑ (ูุณุชุฎุฏู ุขุฎุฑ)
      await _enhancedService.notifyStudentAssignmentWithSound(
        studentId: 'student_123',
        studentName: 'ุฃุญูุฏ ูุญูุฏ',
        busId: 'bus_456',
        busRoute: 'ุงูุฎุท ุงูุฃูู',
        parentId: 'parent_789', // ูุณุชุฎุฏู ุขุฎุฑ (ููู ุงูุฃูุฑ)
        supervisorId: 'supervisor_101',
        parentName: 'ูุญูุฏ ุฃุญูุฏ',
        parentPhone: '0501234567',
        excludeAdminId: currentUser.uid, // ุงุณุชุจุนุงุฏ ุงูุฅุฏูู ุงูุญุงูู
      );

      print('โ ุชู ุฅุฑุณุงู ุฅุดุนุงุฑ ูููู ุงูุฃูุฑ (ูุฌุจ ุฃูุง ูุธูุฑ ููุฅุฏูู ุงูุญุงูู)');
      print('๐ฑ ููู ุงูุฃูุฑ ุณูุฑู ุงูุฅุดุนุงุฑ ุนูุฏูุง ููุชุญ ุงูุชุทุจูู');

      print('\n๐ฏ ุงููุชูุฌุฉ ุงููุชููุนุฉ:');
      print('- ุงูุฅุฏูู ุงูุญุงูู: ูุง ูุฑู ุฅุดุนุงุฑ');
      print('- ููู ุงูุฃูุฑ: ุณูุฑู ุฅุดุนุงุฑ ุนูุฏ ูุชุญ ุงูุชุทุจูู');

    } catch (e) {
      print('โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงูุณููุงุฑูู: $e');
    }
  }

  /// ุชุดุบูู ุฌููุน ุงูุงุฎุชุจุงุฑุงุช
  Future<void> runAllTests() async {
    print('๐ ุจุฏุก ุชุดุบูู ุฌููุน ุงุฎุชุจุงุฑุงุช ุงุณุชูุฏุงู ุงูุฅุดุนุงุฑุงุช...\n');

    await testTargetedNotification();
    
    await Future.delayed(Duration(seconds: 3));
    
    await testAdminParentScenario();

    print('\nโ ุงูุชูุช ุฌููุน ุงูุงุฎุชุจุงุฑุงุช!');
    print('๐ ุชุญูู ูู ุงููุชุงุฆุฌ ูู ุงูุชุทุจูู ูุงูู console logs');
  }
}

/// ุฏุงูุฉ ูุณุงุนุฏุฉ ูุชุดุบูู ุงูุงุฎุชุจุงุฑุงุช
Future<void> runNotificationTargetingTests() async {
  final tester = NotificationTargetingTest();
  await tester.runAllTests();
}

/// ูุซุงู ุนูู ููููุฉ ุงูุงุณุชุฎุฏุงู ูู ุงูุชุทุจูู
class NotificationTestScreen extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('ุงุฎุชุจุงุฑ ุงุณุชูุฏุงู ุงูุฅุดุนุงุฑุงุช'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () async {
                final tester = NotificationTargetingTest();
                await tester.testTargetedNotification();
              },
              child: Text('ุงุฎุชุจุงุฑ ุงูุฅุดุนุงุฑุงุช ุงููุณุชูุฏูุฉ'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                final tester = NotificationTargetingTest();
                await tester.testAdminParentScenario();
              },
              child: Text('ุงุฎุชุจุงุฑ ุณููุงุฑูู ุงูุฅุฏูู ูููู ุงูุฃูุฑ'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () async {
                final tester = NotificationTargetingTest();
                await tester.runAllTests();
              },
              child: Text('ุชุดุบูู ุฌููุน ุงูุงุฎุชุจุงุฑุงุช'),
            ),
          ],
        ),
      ),
    );
  }
}
