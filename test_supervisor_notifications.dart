import 'package:flutter/material.dart';
import 'lib/services/supervisor_notification_service.dart';
import 'lib/models/supervisor_notification_model.dart';

/// ุงุฎุชุจุงุฑ ูุธุงู ุฅุดุนุงุฑุงุช ุงููุดุฑู
void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  print('๐งช ุจุฏุก ุงุฎุชุจุงุฑ ูุธุงู ุฅุดุนุงุฑุงุช ุงููุดุฑู...');
  
  final supervisorNotificationService = SupervisorNotificationService();
  
  try {
    // ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ
    await _testCreateSupervisorNotifications(supervisorNotificationService);
    
    // ุงุฎุชุจุงุฑ ุงูุญูุธ ูุงูุชุญููู
    await _testSaveAndLoad(supervisorNotificationService);
    
    // ุงุฎุชุจุงุฑ ุงูุนูููุงุช
    await _testOperations(supervisorNotificationService);
    
    // ุงุฎุชุจุงุฑ ุงูุฃููุงุน ุงููุฎุชููุฉ
    await _testNotificationTypes();
    
    // ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงููุชูุฏูุฉ
    await _testAdvancedFeatures();
    
    print('โ ุชู ุงุฌุชูุงุฒ ุฌููุน ุงุฎุชุจุงุฑุงุช ูุธุงู ุฅุดุนุงุฑุงุช ุงููุดุฑู!');
    
  } catch (e) {
    print('โ ูุดู ูู ุงุฎุชุจุงุฑ ูุธุงู ุฅุดุนุงุฑุงุช ุงููุดุฑู: $e');
  }
}

/// ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ ูููุดุฑู
Future<void> _testCreateSupervisorNotifications(SupervisorNotificationService service) async {
  print('๐ ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฅุดุนุงุฑุงุช ุงููุดุฑู...');
  
  // ุฅุดุนุงุฑ ุญุถูุฑ ุงูุทุงูุจ
  final attendanceNotification = SupervisorNotificationModel(
    id: '1',
    title: 'ุชุฃููุฏ ุญุถูุฑ ุงูุทุงูุจ',
    body: 'ูุฑุฌู ุชุฃููุฏ ุญุถูุฑ ุงูุทุงูุจ ุฃุญูุฏ ูุญูุฏ ูู ุงูุญุงููุฉ ุฑูู 123',
    data: {
      'type': 'student_attendance',
      'studentName': 'ุฃุญูุฏ ูุญูุฏ',
      'busNumber': '123',
      'routeName': 'ุทุฑูู ุงูุญู ุงูุฃูู',
    },
    timestamp: DateTime.now(),
    isRead: false,
    type: 'student_attendance',
    priority: SupervisorNotificationPriority.normal,
    studentId: 'student_123',
    busId: 'bus_123',
    routeId: 'route_123',
  );
  
  // ุฅุดุนุงุฑ ุจุฏุงูุฉ ุงูุฑุญูุฉ
  final routeStartNotification = SupervisorNotificationModel(
    id: '2',
    title: 'ุจุฏุงูุฉ ุงูุฑุญูุฉ',
    body: 'ุชู ุจุฏุก ุฑุญูุฉ ุงูุญุงููุฉ ุฑูู 123 - ุทุฑูู ุงูุญู ุงูุฃูู',
    data: {
      'type': 'route_start',
      'busNumber': '123',
      'routeName': 'ุทุฑูู ุงูุญู ุงูุฃูู',
      'expectedTime': '07:30 ุต',
    },
    timestamp: DateTime.now(),
    isRead: false,
    type: 'route_start',
    priority: SupervisorNotificationPriority.high,
    busId: 'bus_123',
    routeId: 'route_123',
  );
  
  // ุฅุดุนุงุฑ ุทูุงุฑุฆ
  final emergencyNotification = SupervisorNotificationModel(
    id: '3',
    title: 'ุญุงูุฉ ุทูุงุฑุฆ',
    body: 'ุญุงุฏุซ ุทููู ูู ุงูุญุงููุฉ ุฑูู 123 - ูุชุทูุจ ุชุฏุฎู ููุฑู',
    data: {
      'type': 'emergency',
      'busNumber': '123',
      'location': 'ุดุงุฑุน ุงูููู ููุฏ',
      'severity': 'minor',
    },
    timestamp: DateTime.now(),
    isRead: false,
    type: 'emergency',
    priority: SupervisorNotificationPriority.urgent,
    busId: 'bus_123',
  );
  
  print('โ ุชู ุฅูุดุงุก ${[attendanceNotification, routeStartNotification, emergencyNotification].length} ุฅุดุนุงุฑุงุช ุชุฌุฑูุจูุฉ');
  
  // ุงุฎุชุจุงุฑ ุงูุฎุตุงุฆุต
  print('๐ ุงุฎุชุจุงุฑ ุฎุตุงุฆุต ุงูุฅุดุนุงุฑุงุช:');
  print('   - ุฅุดุนุงุฑ ุงูุญุถูุฑ: ${attendanceNotification.typeDescription} ${attendanceNotification.typeIcon}');
  print('   - ุฅุดุนุงุฑ ุงูุฑุญูุฉ: ${routeStartNotification.priorityText} (${routeStartNotification.priorityColor})');
  print('   - ุฅุดุนุงุฑ ุงูุทูุงุฑุฆ: ${emergencyNotification.requiresAction ? 'ูุชุทูุจ ุฅุฌุฑุงุก' : 'ูุง ูุชุทูุจ ุฅุฌุฑุงุก'}');
  print('   - ูุชุทูุจ ุชุฃููุฏ: ${attendanceNotification.requiresConfirmation}');
  print('   - ุงูููุช ุงูููุณู: ${attendanceNotification.formattedTime}');
  print('   - ูู ุฌุฏูุฏุ ${attendanceNotification.isNew}');
}

/// ุงุฎุชุจุงุฑ ุงูุญูุธ ูุงูุชุญููู
Future<void> _testSaveAndLoad(SupervisorNotificationService service) async {
  print('๐พ ุงุฎุชุจุงุฑ ุงูุญูุธ ูุงูุชุญููู...');
  
  // ูุญุงูุงุฉ ุญูุธ ุฅุดุนุงุฑ
  final testNotification = SupervisorNotificationModel(
    id: DateTime.now().millisecondsSinceEpoch.toString(),
    title: 'ุงุฎุชุจุงุฑ ุงูุญูุธ',
    body: 'ูุฐุง ุฅุดุนุงุฑ ูุงุฎุชุจุงุฑ ุนูููุฉ ุงูุญูุธ ูุงูุชุญููู',
    data: {'test': 'save_load'},
    timestamp: DateTime.now(),
    isRead: false,
    type: 'system_update',
    priority: SupervisorNotificationPriority.normal,
    routeId: 'test_route',
  );
  
  print('๐ค ูุญุงูุงุฉ ุญูุธ ุฅุดุนุงุฑ: ${testNotification.title}');
  
  // ุงุฎุชุจุงุฑ ุชุญููู JSON
  final json = testNotification.toJson();
  final fromJson = SupervisorNotificationModel.fromJson(json);
  
  assert(testNotification.id == fromJson.id, 'ูุดู ูู ุชุญููู JSON');
  assert(testNotification.title == fromJson.title, 'ูุดู ูู ุชุญููู ุงูุนููุงู');
  assert(testNotification.priority == fromJson.priority, 'ูุดู ูู ุชุญููู ุงูุฃููููุฉ');
  assert(testNotification.routeId == fromJson.routeId, 'ูุดู ูู ุชุญููู ูุนุฑู ุงูุทุฑูู');
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุชุญููู JSON');
  
  // ุงุฎุชุจุงุฑ ุชุญููู Map
  final map = testNotification.toMap();
  final fromMap = SupervisorNotificationModel.fromMap(map);
  
  assert(testNotification.id == fromMap.id, 'ูุดู ูู ุชุญููู Map');
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุชุญููู Map');
}

/// ุงุฎุชุจุงุฑ ุงูุนูููุงุช
Future<void> _testOperations(SupervisorNotificationService service) async {
  print('โ๏ธ ุงุฎุชุจุงุฑ ุงูุนูููุงุช...');
  
  // ุงุฎุชุจุงุฑ copyWith
  final originalNotification = SupervisorNotificationModel(
    id: 'test_copy',
    title: 'ุฅุดุนุงุฑ ุฃุตูู',
    body: 'ูุญุชูู ุฃุตูู',
    data: {},
    timestamp: DateTime.now(),
    isRead: false,
    type: 'general',
    priority: SupervisorNotificationPriority.normal,
  );
  
  final copiedNotification = originalNotification.copyWith(
    isRead: true,
    priority: SupervisorNotificationPriority.high,
    studentId: 'new_student_id',
    busId: 'new_bus_id',
  );
  
  assert(copiedNotification.id == originalNotification.id, 'ูุดู ูู copyWith - ID');
  assert(copiedNotification.title == originalNotification.title, 'ูุดู ูู copyWith - Title');
  assert(copiedNotification.isRead == true, 'ูุดู ูู copyWith - isRead');
  assert(copiedNotification.priority == SupervisorNotificationPriority.high, 'ูุดู ูู copyWith - priority');
  assert(copiedNotification.studentId == 'new_student_id', 'ูุดู ูู copyWith - studentId');
  assert(copiedNotification.busId == 'new_bus_id', 'ูุดู ูู copyWith - busId');
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ copyWith');
  
  // ุงุฎุชุจุงุฑ ุงูููุงุฑูุฉ
  final notification1 = SupervisorNotificationModel(
    id: 'same_id',
    title: 'ุฅุดุนุงุฑ 1',
    body: 'ูุญุชูู 1',
    data: {},
    timestamp: DateTime.now(),
    isRead: false,
    type: 'general',
    priority: SupervisorNotificationPriority.normal,
  );
  
  final notification2 = SupervisorNotificationModel(
    id: 'same_id',
    title: 'ุฅุดุนุงุฑ 2',
    body: 'ูุญุชูู 2',
    data: {},
    timestamp: DateTime.now(),
    isRead: true,
    type: 'student_attendance',
    priority: SupervisorNotificationPriority.high,
  );
  
  assert(notification1 == notification2, 'ูุดู ูู ุงูููุงุฑูุฉ - ููุณ ID');
  assert(notification1.hashCode == notification2.hashCode, 'ูุดู ูู hashCode');
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุงูููุงุฑูุฉ');
}

/// ุงุฎุชุจุงุฑ ุฃููุงุน ุงูุฅุดุนุงุฑุงุช ุงููุฎุชููุฉ
Future<void> _testNotificationTypes() async {
  print('๐ฏ ุงุฎุชุจุงุฑ ุฃููุงุน ุงูุฅุดุนุงุฑุงุช...');
  
  final types = [
    'student_attendance',
    'student_absence',
    'student_behavior',
    'student_incident',
    'route_start',
    'route_complete',
    'route_delay',
    'bus_maintenance',
    'bus_breakdown',
    'emergency',
    'schedule_change',
    'admin_message',
    'system_update',
    'general',
  ];
  
  for (final type in types) {
    final notification = SupervisorNotificationModel(
      id: 'type_test_$type',
      title: 'ุงุฎุชุจุงุฑ ุงูููุน',
      body: 'ุงุฎุชุจุงุฑ ููุน ุงูุฅุดุนุงุฑ',
      data: {'type': type},
      timestamp: DateTime.now(),
      isRead: false,
      type: type,
      priority: SupervisorNotificationPriority.normal,
    );
    
    print('   - ${notification.typeDescription}: ${notification.typeIcon}');
    print('     ูุชุทูุจ ุฅุฌุฑุงุก: ${notification.requiresAction}');
    print('     ูุชุทูุจ ุชุฃููุฏ: ${notification.requiresConfirmation}');
    if (notification.requiresAction) {
      print('     ูุต ุงูุฅุฌุฑุงุก: ${notification.actionText}');
    }
  }
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุฃููุงุน ุงูุฅุดุนุงุฑุงุช');
  
  // ุงุฎุชุจุงุฑ ุงูุฃููููุงุช
  print('๐จ ุงุฎุชุจุงุฑ ุงูุฃููููุงุช...');
  final priorities = SupervisorNotificationPriority.values;
  
  for (final priority in priorities) {
    final notification = SupervisorNotificationModel(
      id: 'priority_test',
      title: 'ุงุฎุชุจุงุฑ ุงูุฃููููุฉ',
      body: 'ุงุฎุชุจุงุฑ',
      data: {},
      timestamp: DateTime.now(),
      isRead: false,
      type: 'general',
      priority: priority,
    );
    
    print('   - ${notification.priorityText}: ${notification.priorityColor}');
  }
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุงูุฃููููุงุช');
}

/// ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงููุชูุฏูุฉ
Future<void> _testAdvancedFeatures() async {
  print('๐ ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงููุชูุฏูุฉ...');
  
  // ุฅุดุนุงุฑ ูุน ุจูุงูุงุช ุดุงููุฉ
  final comprehensiveNotification = SupervisorNotificationModel(
    id: 'comprehensive_test',
    title: 'ุฅุดุนุงุฑ ุดุงูู',
    body: 'ุฅุดุนุงุฑ ูุญุชูู ุนูู ุฌููุน ุงูุจูุงูุงุช',
    data: {
      'studentName': 'ุฃุญูุฏ ูุญูุฏ',
      'busNumber': 'ุญุงููุฉ 123',
      'routeName': 'ุทุฑูู ุงูุญู ุงูุฃูู',
      'location': 'ูุฏุฑุณุฉ ุงูููุฑ ุงูุงุจุชุฏุงุฆูุฉ',
      'expectedTime': '07:30 ุต',
      'delayReason': 'ุงุฒุฏุญุงู ูุฑูุฑู',
    },
    timestamp: DateTime.now(),
    isRead: false,
    type: 'route_delay',
    priority: SupervisorNotificationPriority.high,
    studentId: 'student_123',
    busId: 'bus_123',
    routeId: 'route_123',
  );
  
  print('๐จโ๐ผ ุงุฎุชุจุงุฑ ุงูุฅุดุนุงุฑ ุงูุดุงูู:');
  print('   - ุงุณู ุงูุทุงูุจ: ${comprehensiveNotification.studentName}');
  print('   - ุฑูู ุงูุญุงููุฉ: ${comprehensiveNotification.busNumber}');
  print('   - ุงุณู ุงูุทุฑูู: ${comprehensiveNotification.routeName}');
  print('   - ุงููููุน: ${comprehensiveNotification.location}');
  print('   - ุงูููุช ุงููุชููุน: ${comprehensiveNotification.expectedTime}');
  print('   - ุณุจุจ ุงูุชุฃุฎูุฑ: ${comprehensiveNotification.delayReason}');
  print('   - ูุชุนูู ุจุทุงูุจ: ${comprehensiveNotification.isStudentRelated}');
  print('   - ูุชุนูู ุจุญุงููุฉ: ${comprehensiveNotification.isBusRelated}');
  print('   - ูุชุนูู ุจุทุฑูู: ${comprehensiveNotification.isRouteRelated}');
  
  // ุงุฎุชุจุงุฑ ุงูููุช
  final oldNotification = SupervisorNotificationModel(
    id: 'old_test',
    title: 'ุฅุดุนุงุฑ ูุฏูู',
    body: 'ุฅุดุนุงุฑ ูู ุงูุฃูุณ',
    data: {},
    timestamp: DateTime.now().subtract(const Duration(days: 1)),
    isRead: true,
    type: 'general',
    priority: SupervisorNotificationPriority.low,
  );
  
  print('โฐ ุงุฎุชุจุงุฑ ุชูุณูู ุงูููุช:');
  print('   - ุงูุฅุดุนุงุฑ ุงูุฌุฏูุฏ: ${comprehensiveNotification.formattedTime}');
  print('   - ุงูุฅุดุนุงุฑ ุงููุฏูู: ${oldNotification.formattedTime}');
  print('   - ูู ุงูุฌุฏูุฏ ุฌุฏูุฏุ ${comprehensiveNotification.isNew}');
  print('   - ูู ุงููุฏูู ุฌุฏูุฏุ ${oldNotification.isNew}');
  
  // ุงุฎุชุจุงุฑ ุงูุฅุฌุฑุงุกุงุช ูุงูุชุฃููุฏุงุช
  print('๐ง ุงุฎุชุจุงุฑ ุงูุฅุฌุฑุงุกุงุช ูุงูุชุฃููุฏุงุช:');
  final actionTypes = ['student_incident', 'bus_breakdown', 'emergency', 'schedule_change'];
  final confirmationTypes = ['route_start', 'route_complete', 'student_attendance'];
  
  for (final type in actionTypes) {
    final notification = SupervisorNotificationModel(
      id: 'action_test_$type',
      title: 'ุงุฎุชุจุงุฑ ุงูุฅุฌุฑุงุก',
      body: 'ุงุฎุชุจุงุฑ',
      data: {},
      timestamp: DateTime.now(),
      isRead: false,
      type: type,
      priority: SupervisorNotificationPriority.normal,
    );
    print('   - $type: ูุชุทูุจ ุฅุฌุฑุงุก = ${notification.requiresAction}, ูุต ุงูุฅุฌุฑุงุก = ${notification.actionText}');
  }
  
  for (final type in confirmationTypes) {
    final notification = SupervisorNotificationModel(
      id: 'confirmation_test_$type',
      title: 'ุงุฎุชุจุงุฑ ุงูุชุฃููุฏ',
      body: 'ุงุฎุชุจุงุฑ',
      data: {},
      timestamp: DateTime.now(),
      isRead: false,
      type: type,
      priority: SupervisorNotificationPriority.normal,
    );
    print('   - $type: ูุชุทูุจ ุชุฃููุฏ = ${notification.requiresConfirmation}');
  }
  
  print('โ ูุฌุญ ุงุฎุชุจุงุฑ ุงูููุฒุงุช ุงููุชูุฏูุฉ');
}
